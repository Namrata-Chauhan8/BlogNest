import express from 'express';
import multer from 'multer';
import { signupUser , loginUser} from '../controller/user-controller.js';
// import { uploadImage , getImage} from '../controller/image-controller.js';
import {GridFsStorage} from 'multer-gridfs-storage';
import { createPost , getAllPosts , getPost , updatePost, deletePost} from '../controller/post-controller.js';
import { authenticateToken } from '../controller/jwt-controller.js';
import { newComment , getComments , deleteComment} from '../controller/comment-controller.js';
const storage = new GridFsStorage({ url: 'mongodb+srv://namratac:Namrata@cluster0.nte2w9a.mongodb.net/Blog' });
// Set multer storage engine to the newly created object
// const upload = multer({ storage });
// import upload from "../utils/upload.js";
const router=express.Router();
router.post('/signup', signupUser);
router.post('/login', loginUser);
// router.post('/check-username',checkUsername);
// router.post('/file/upload', upload.single('file'), uploadImage);
// router.get('/file/:filename', getImage);
router.post('/create', authenticateToken ,createPost);
router.get('/posts', authenticateToken, getAllPosts);
router.get('/post/:id', authenticateToken, getPost);
router.put('/update/:id' , authenticateToken, updatePost);
router.delete('/delete/:id', authenticateToken, deletePost);
router.post('/comment/new', authenticateToken, newComment);
router.get('/comments/:id', authenticateToken, getComments);
router.delete('/comment/delete/:id', authenticateToken, deleteComment);
export default router;